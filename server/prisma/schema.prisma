generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model user {
  id                Int      @id @default(autoincrement())
  name              String?
  phone_number      String   @unique
  email             String?  @unique
  notificationToken String?
  password          String
  ratings           Float    @default(0)
  totalRides        Float    @default(0)
  cratedAt          DateTime @default(now())
  updatedAt         DateTime @updatedAt
  rides             rides[]  @relation("UserRides")
}

enum VehicleType {
  Car
  Motorcycle
  CNG
}

model driver {
  id                  Int        @id @default(autoincrement())
  name                String
  country             String
  phone_number        String     @unique
  email               String     @unique
  password          String
  vehicle_type        VehicleType
  registration_number String     @unique
  registration_date   String
  driving_license     String
  vehicle_color       String?
  rate                String
  notificationToken   String?
  ratings             Float      @default(0)
  totalEarning        Float      @default(0)
  totalRides          Float      @default(0)
  pendingRides        Float      @default(0)
  cancelRides         Float      @default(0)
  status              String     @default("inactive")
  createdAt           DateTime   @default(now())
  updatedAt           DateTime   @updatedAt
  rides               rides[]    @relation("DriverRides")
}

model rides {
  id                      Int      @id @default(autoincrement())
  userId                  Int
  driverId                Int
  charge                  Float
  currentLocationName     String
  destinationLocationName String
  distance                String
  status                  String
  rating                  Float?
  user                    user     @relation("UserRides", fields: [userId], references: [id])
  driver                  driver   @relation("DriverRides", fields: [driverId], references: [id])
  cratedAt                DateTime @default(now())
  updatedAt               DateTime @updatedAt
}

model Event {
  id             Int      @id @default(autoincrement())
  from           String
  fromLat        Float
  fromLng        Float
  destination    String
  destinationLat Float
  destinationLng Float
  eventDate      DateTime
  eventTime      String
  createdAt      DateTime @default(now())
  bid            Float
  noOfDays       Int
  description     String
}

model SharedRide {
  id             Int      @id @default(autoincrement())
  from           String
  fromLat        Float
  fromLng        Float
  destination    String
  destinationLat Float
  destinationLng Float
  Date           DateTime
  Time           String
  createdAt      DateTime @default(now())
  Bid            Float
  carType        String
  numberOfSeats  Int
  AvaliableSeats Int

}